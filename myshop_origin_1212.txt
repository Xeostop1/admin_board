class myShop{
    constructor(data) { // 생성자 호출
        var myshop_id;
        var board_title;
        var board_id;
        var pcs_ids;
        var pcs_image;
        var pcs_name;
        var result;
        var status;
        
        this.myshop_id = data.myshop_id;
        this.board_title = data.board_title;
        this.board_id = data.board_id;
        this.pcs_ids = data.pcs_ids;
        this.pcs_image = data.pcs_image;
        this.pcs_name = data.pcs_name;
        this.status = data.status;
        this.modalContent='';

    }

	//마이샵에 아이템 추가시 팝업
	OpenModal(){
        $("#div_popup").css({
            "display": "flex",
            "align-items": "center",
            "justify-content": "center",
        });
        $('.a_close.outside').css({
            "top": "35px",
            "right": "112px"
        });
            
        $('#div_cover').fadeIn();
		$('#div_popup').show();
		$('#div_popup>div').html('');
		$("#div_popup>div").html(this.modalContent);
	}

    //내 보드 목록 리턴 
	getBoardList() {
        return $.ajax({ 
            type: "GET",
            url: "/myshop/ajax/get_board_list.asp",
            traditional: true,
            data: {'pcs_ids': [this.pcs_ids]},  
            dataType: "json"
        }).done((result) => {
            this.pcs_image = result.pcs[0].pcs_image;
            this.pcs_name = result.pcs[0].pcs_name;
        });
    }


	//새로운보드 만들어서 상품 넣기
	// { "resp":"OK",  "pcs_count":1,  "resp_message":"ADDED SUCCESSFULLY",  "status":"ADD" }
	setBoardInfo() {
        const actions = {
            'ADD': () => this.selectPcs(),
            'REMOVE': () => this.removePcs()
        };
        $.ajax({
            type: "GET",
            url: "/myshop/ajax/set_myshop_pcs.asp",
            data: {
                'board_id': this.board_id,
                'pcs_ids': this.pcs_ids,    
                'status': this.status,
                'board_title': this.board_title
            },
            context: this,
            success: function(item) {
                var data = JSON.parse(item);
                alert(JSON.stringify(data))
                if(data.resp === 'OK' && actions[this.status]) {
                    if (this.status === 'ADD' && this.board_id === 0) {
                        this.board_id = this.NewBoardId();
                    }
                    // status에 따라 함수 호출
                    actions[this.status](); 
                }
            },
            error: function(response, textStatus, errorThrown) {
                alert(errorThrown);
            }
        });
    }

	
       //선택상품 보여주기
       selectPcs(){
        var content=`
        <div style="margin: 50px; display: flex; flex-direction: column; justify-content: center; align-items: center; height: 200px; position:relative; width:200px; margin-top: 30px;">
            <div style="position:relative; width:150px; height:150px;">
                <div class="psc_imge" style="background-image: url('${this.pcs_image}'); width: 150px; height: 150px; background-size: cover"></div>
                <p style="margin-left:-25px; word-wrap: break-word; margin-bottom:15px; width:300px;">${this.pcs_name}</p>   
            <div>
                <a style="display: inline-block;" class="gotoBtn btn1 biggest">Go Myshop</a>
                <a style="display: inline-block;" class="closeBtn btn1 biggest">X</a>
            </div>              
        </div>
            `;
        this.modalContent=content;
       	this.OpenModal();
    }


    //기존보드 보여주기
    showBordList() {
        this.getBoardList().done((result) => {
            var content = `
                <div style="margin:30px; display: flex; flex-direction: column; align-items: center;">
                    <h2 style=" margin-bottom:15px;" id="myshop_title">${result.myshop_title} </h2>
                        <div style="position:relative; width:150px; height:150px;">
                            <div class="psc_imge" style="background-image: url('${result.pcs[0].pcs_image}'); width: 150px; height: 150px; background-size: cover"></div>
                        <p style="margin-left: -15px; word-wrap: break-word; margin-bottom:10px;">${result.pcs[0].pcs_name}</p>    
                        <ul class="board_list" style="padding: 0; text-align: left;">
                        ${
                            result.data && result.data.length > 0 ? 
                            result.data.map(board => `
                                <li>
                                    <h3>
                                        <a style="font-size:15px;" board_id="${board.board_id}" class="board-title" onclick="setBoardInfo(${board.board_id}, ${this.pcs_ids}, 'ADD');">${board.board_title}</a>
                                    </h3>
                                </li>
                            `).join('') : '<li>NO BOARD</li>'
                        }
                        </ul>   
                        <div style="padding-bottom:20px; display: flex; margin-bottom:10px; align-items: center; justify-content: center;">   
                            <input type="text" id="board_title" style="display: inline-block;">
                            <a id="a_addToNew" class="btn1 biggest" style="display: inline-block;">+</a>
                        </div>
                    </div>
                </div>
            `;
        this.modalContent=content;
       	this.OpenModal();
        }).fail((jqXHR, textStatus, errorThrown) => {
            console.log(textStatus, errorThrown);
        });
    }

    //===추가
    // removePcs() {
    //     $('.mspPcsList>li.selected').remove();
    // }
    //===추가 이건 이렇게 해도 되는지 물어보기
    NewBoardId() {
        var lastBoardId = $('ul.board_list a.board-title:last').attr('board_id');
        return lastBoardId ? parseInt(lastBoardId) + 1 : 0;
    }
    //====추가
    actionSelected() {
        var pcsIds = $('.mspPcsList>li.selected').map(function() {
            return $(this).attr('pcs_id');
        }).get().join(',');
        var status = $(this).attr('status');
        var onFlag=false;
        const actions = {
            'ON': {
                action: () => {
                    $('.mspPcsList>li.selected.inActive').each(function() {
                        $(this).removeClass('inActive');
                        onFlag = true; 
                    });
                },
                des: '판매 시작'
            },
            'OFF': {
                action: () => {
                    $('.mspPcsList>li.selected').addClass('inActive');
                },
                des: '판매 중지'
            },
            'REMOVE': {
                action:() => {
                    if(confirm(`${pcsIds.split(',').length}개 항목을 ${actions[status].des}하시겠습니까?`)) {
                        $('.mspPcsList>li.selected').remove();
                    }
                },
                des: '제거'
            }
        }
    
        if (pcsIds === '') {
            alert('선택된 항목이 없습니다.');
            return; 
        }
    
        if (actions[status]) {
                var urlParams = new URLSearchParams(window.location.search);
                // ms 객체의 속성 설정
                this.board_id = urlParams.get('board'); 
                this.pcs_ids = pcsIds;
                this.status = status;
                this.board_title = '';
                actions[status].action();
                //상태가 on이 아니거나, 상태가 on인데 true라면 
                if (status !== 'ON' || (status === 'ON' && onFlag)) {
                    this.setBoardInfo();
                }
        }
    }
    

}//endC




var ms = new myShop({});
$(document).on('click', '.a_toggleMyshop', function () {
	ms.pcs_ids=$(this).attr('pcs_id'),
	ms.showBordList();
});

$(document).on('click', '.board-title', function () {
	ms.board_id=$(this).attr('board_id');
	ms.board_title='';
	ms.status='ADD';
	ms.setBoardInfo();
});

 


//프로토 완성 //.a_ManagePcs on/off/ remove(staus value)
// .mspPcsList>li.selected   attr('pcs_id')[arry] request/response 
// $(document).on('click', 'a[status="REMOVE"]', function() {
//     var pcsIds = $('.mspPcsList>li.selected').map(function() {
//         return $(this).attr('pcs_id');
//     }).get().join(',');
//     if (pcsIds === '') {
//         alert('삭제할 항목을 선택해주세요.');
//         return; 
//     }
//     if(confirm(`${pcsIds.split(',').length}개를 정말로 삭제하시겠습니까?`)) {
//         var urlParams = new URLSearchParams(window.location.search);
//         // ms 객체의 속성 설정
//         ms.board_id = urlParams.get('board'); 
//         ms.pcs_ids = pcsIds;
//         ms.status = 'REMOVE';
//         ms.board_title = ''; 
//         ms.setBoardInfo();
//     }
// });
//  $(document).on('click', 'a[status="REMOVE"]', function() {

//  });
//  $(document).on('click', 'a[status="ON"]', function() {
    
//  });
//  $(document).on('click', 'a[status="OFF"]', function() {
    
//  });


//.a_ManagePcs on/off/ remove(staus value)
// .mspPcsList>li.selected   attr('pcs_id')[arry] request/response 
$(document).on('click', '.a_ManagePcs', function () {
    //alert(123)
    //ms.status='REMOVE';
});

//.a_ManagePcs on/off/ remove(staus value)
// .mspPcsList>li.selected   attr('pcs_id')[arry] request/response 
$(document).on('click', '#a_addToNew', function () {
	var board_title=$('#board_title').val();
	if(board_title){
		ms.board_id=0;
		ms.board_title=board_title;
		ms.status='ADD';
		ms.setBoardInfo();
	}else{
		alert('no title');
	}
});
$(document).on('click', '.gotoBtn', function () {
    //넘겨주는 것 보드id,
    //이렇게 넘기면 새로생성된 id가 넘어가지를 않아!!! 다시 수정 셋값에서 받아서 넘겨야 하네
    window.location.href = `http://bak2.gvg.co.kr/myshop/?board=${ms.board_id}`;   
 });

 $(document).on('click', '.closeBtn', function () {
    $('#div_cover').hide();
	$('#div_popup').hide();
 });


$(document).ready(function(){
    $('head').append('<link rel="stylesheet" type="text/css" href="./css/popup.css">');
    const statuses = ['REMOVE', 'ON', 'OFF'];
    $.each(statuses, function(i, status) {
        $(`#mspAdminContainer a[status="${status}"]`).on('click', function() {
            //alert(status)
            ms.actionSelected.call(this);
        });
    });
});
