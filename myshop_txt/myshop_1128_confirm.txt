class myShop {

    constructor(data) { // 생성자 호출
        console.log('== 생성자 시작 ==');
        var myshop_id;
        var board_title;
        var board_id;
        var result;
        this.myshop_id = data.myshop_id;
        this.board_title = data.board_title;
        this.board_id = data.board_id;
        console.log('== 생성자 끝 ==');
    }

    createMyshop() {
        console.log('== createMyshop 시작 ==');
        // 최신값
        var data = this.getBoardList();
        // this.result;
        this.createModal(data);
        console.log('== createMyshop 끝 ==');
    }

    addMyshop() {
        console.log('== addMyshop 시작 ==');
        var input = $(`<input class="add_title" placeholder="title" style="height:50px">`);
        var a = $(`<a class="material-symbols-outlined" style="padding-top: 13px;">add</a>`);
        var div = $(`<div style="display:flex"></div>`).append(input, a);
        console.log('== addMyshop 끝 ==');
        return div;
    }

    addInput(type, placeholder, height, display = 'inline-block') {
        console.log('== addInput 시작 ==');
        return $(`<input class="${type}" placeholder="${placeholder}" style="height:${height}px; display:${display}">`);
    }

    addBtn(name, text, display = 'inline-block') {
        console.log('== addBtn 시작 ==');
        return $(`<a class="material-symbols-outlined ${name}" style="padding-top: 13px; display:${display}">${text}</a><br>`);
    }

    addBoard() {
        console.log('== addBoard 시작 ==');
        var title = this.addInput('board_title', 'title', 50);
        var desc = this.addInput('board_des', 'description', 50, 'none');
        var TBtn = this.addBtn('TBtn', 'add');
        var DBtn = this.addBtn('DBtn', 'add', 'none');
        this.bindEv(title, desc, TBtn, DBtn);
        var board_div = $('<div>').addClass('board_add');
        board_div.append(title, TBtn, desc, DBtn);
        console.log('== addBoard 끝 ==');
        return board_div;
    }

    bindEv(title, desc, TBtn, DBtn) {
        console.log('== bindEv 시작 ==');
        TBtn.off('click').on('click', () => this.onTBtn(title, desc, DBtn));
        DBtn.off('click').on('click', () => this.onDBtn(title, desc, DBtn));
        console.log('== bindEv 끝 ==');
    }

    onTBtn(title, desc, DBtn) {
        console.log('== onTBtn 시작 ==');
        if (title.val().trim() !== "") {
            desc.show();
            DBtn.show();
            console.log('== onTBtn 끝 ==');
        } else {
            alert("타이틀을 적어주세요");
            console.log('== onTBtn 끝 (타이틀이 비어있음) ==');
        }
    }

    onDBtn(title, desc, DBtn) {
        console.log('== onDBtn 시작 ==');
        var newBoard = this.createBd(title, desc);
        var newBoardList = this.setBoardInfo(newBoard);
        var newBoardDiv = this.showBoard(newBoardList);
        var h2 = $('.mContent h2').detach();
        $('.mContent').html('').append(h2).append(newBoardDiv);
        $(".board_title").val('')
        $(".board_des").val('')
        desc.hide();
        DBtn.hide();
        console.log('== onDBtn 끝 ==');
    }

    createBd(title, desc) {
        console.log('== createBd 시작 ==');
        var board_title = title.val();
        var board_desc = desc.val();
        var board_id = this.result.data.length + 1;
        console.log('== createBd 끝 ==');
        return {
            board_id: board_id,
            board_title: board_title,
            board_desc: board_desc
        };
    }

    // ===보드보기=====
    showBoard(item) {
        console.log('== showBoard 시작 ==');
        var board_div = $('.board_div');
        if (board_div.length === 0) {
            board_div = $('<div>').addClass('board_div');
        }
        var list_div = $('.board_list');
        if (list_div.length === 0) {
            list_div = $('<div>').addClass('board_list');
            board_div.append(list_div);
        }
        list_div.empty();
        var boards = Array.isArray(item) ? item : item.data;
        $.each(boards, (i, board) => {
            var b_Title = $(`<p style="display: inline-block">
                            <a><b> ${i + 1}.</b> ${board.board_title}</a>
                            <br>
                            </p>`);
            b_Title.on('click', () => this.showDescription(board.board_desc));
            var deleteBtn = this.addBtn('DBtn', 'delete');
            deleteBtn.on('click', () => this.deleteBoard(board.board_id));
            list_div.append(b_Title, deleteBtn);
        });
        console.log('== showBoard 끝 ==');
        return board_div;
    }

    deleteBoard(board_id) {
        console.log('== deleteBoard 시작 ==');
        if (confirm("정말 삭제하시겠습니까?")) {
            for (var i = 0; i < this.result.data.length; i++) {
                if (this.result.data[i].board_id === board_id) {
                    this.result.data.splice(i, 1);
                    break;
                }
            }
            this.createModal(this.result);
        } else {
            // 삭제 안하면 그대로 있는거지
            console.log('== deleteBoard 끝 (삭제 취소) ==');
        }
    }

    showDescription(desc) {
        console.log('== showDescription 시작 ==');
        var content = $(`<p>${desc}</p>`); // 게시판 설명 추가
        this.createNewModal(content); // 모달 생성 함수 호출
        console.log('== showDescription 끝 ==');
    }

    createNewModal(content) {
        console.log('== createNewModal 시작 ==');
        var modal = $('<div>').addClass('modal').css({
            'display': 'none',
            'position': 'fixed',
            'z-index': '1',
            'left': '0',
            'top': '0',
            'width': '100%',
            'height': '100%',
            'overflow': 'auto',
            'background-color': 'rgba(0,0,0,0.4)'
        });
        var mContent = $('<div>').addClass('mContent').css({
            'background-color': '#fefefe',
            'margin': '15% auto',
            'padding': '20px',
            'border': '1px solid #888',
            'width': '80%'
        });
        var closeBtn = $('<span>').addClass('close').text('X').css({
            'color': '#aaa',
            'float': 'right',
            'font-size': '28px',
            'font-weight': 'bold'
        }).hover(function () {
            $(this).css('color', 'black');
        }, function () {
            $(this).css('color', '#aaa');
        });
        mContent.append(closeBtn);
        mContent.append(content);
        modal.append(mContent);
        $('body').append(modal);
        closeBtn.on('click', () => { modal.hide(); });
        modal.show();
        $(document).keyup(function (e) {
            if (e.key === "Escape") {
                modal.hide();
            }
        });
        console.log('== createNewModal 끝 ==');
        return { modal: modal, mContent: mContent, closeBtn: closeBtn };
    }

    // ====모달생성====
    createModal(item) {
        console.log('== createModal 시작 ==');
        // $('.modal').remove();

        var mContent = $('<div>').addClass('mContent');
        // myShop 없으면 생성
        if (item.myshop_id <= 0) {
            var itemDiv = this.addMyshop();
            mContent.append(itemDiv);
        } else {
            mContent.append(`<h2> ${item.myshop_title} <span class="material-symbols-outlined">store</span></h2>`);
            var board_div = this.showBoard(this.result);
            var newBoard = this.addBoard();
            newBoard.find('.DBtn').off('click').on('click', () => this.onDBtn(newBoard.find('.board_title'), newBoard.find('.board_des'), newBoard.find('.DBtn')));
            board_div.append(newBoard);
            mContent.append(board_div);
        }
        var modalItem = this.createNewModal(mContent);
        console.log('== createModal 끝 ==');
        return modalItem;
    }

    // 컬렉션 정보저장
    setBoardInfo(newBoard) {
        console.log('== setBoardInfo 시작 ==');
        this.result.data.push(newBoard);
        // return this.getBoardList();
        console.log('== setBoardInfo 끝 ==');
        return this.result.data;
    }

    // 내 컬렉션 리스트 조회  
    getBoardList() {
        console.log('== getBoardList 시작 ==');
        this.result = {
            "myshop_id": this.myshop_id,
            "myshop_title": "myshop title",
            "data": [
                {
                    "board_id": 1,
                    "board_title": "test board 1",
                    "board_desc": "description of test board 1"
                },
                {
                    "board_id": 2,
                    "board_title": "test board 2",
                    "board_desc": "description of test board 2"
                }
            ]
        };
        console.log('== getBoardList 끝 ==');
        return this.result;
    }
}

const ms = new myShop({
    myshop_id: 3,
    board_title: 'TeTenoWinter'
});

// alert(JSON.stringify(ms.setBoardInfo()));
$(document).on('click', '.a_toggleMyshop', function () {
    // var hori=$(this).offset();
    // var verti=$(this).outerHeight();
    // ms.getBoardList();
	var hrefValue  = $(this).parent().prev('a').attr('href');
	var pcs_id = hrefValue.match(/\d+/)[0];
	alert(`클릭한 제품 ${pcs_id}`);
    ms.createMyshop();
});
